{
  "access": [
    "Authenticated"
  ],
  "components": [
    {
      "components": [
        {
          "name": "pageTitle",
          "size": "H1",
          "text": "Customers",
          "type": "heading"
        },
        {
          "components": [
            {
              "class": "col-md-12",
              "components": [
                {
                  "events": {
                    "click": [
                      {
                        "path": "add-customer",
                        "then": [
                          {
                            "code": "await grid0.Reload();",
                            "type": "execute"
                          },
                          {
                            "code": "await InvokeAsync(() => { StateHasChanged(); });",
                            "type": "execute"
                          }
                        ],
                        "type": "popup"
                      }
                    ]
                  },
                  "icon": "add_circle_outline",
                  "name": "button0",
                  "style": {
                    "marginBottom": "10px"
                  },
                  "text": "Add",
                  "type": "button"
                },
                {
                  "events": {
                    "click": [
                      {
                        "condition": "${event?.Value == \"csv\"}",
                        "fileName": "Customers",
                        "name": "accounting_db.getCustomers",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "${(string.IsNullOrEmpty(grid0.Query.Filter)? \"true\" : grid0.Query.Filter)}"
                          },
                          {
                            "name": "$orderby",
                            "value": "${grid0.Query.OrderBy}"
                          },
                          {
                            "name": "$expand",
                            "value": ""
                          },
                          {
                            "name": "$select",
                            "value": "customersID,Company_Name,Company_Address,Company_Telephone_Number,Company_City,Registration_date,Contact_Person_Name,Contact_Person_Designation,Contact_Person_Tel_number,customer_img,DateAdded,Added_By,revenueAccount,expenseAccount"
                          }
                        ],
                        "type": "export"
                      },
                      {
                        "condition": "${event == null || event.Value == \"xlsx\"}",
                        "fileName": "Customers",
                        "format": "xlsx",
                        "name": "accounting_db.getCustomers",
                        "parameters": [
                          {
                            "name": "$filter",
                            "value": "${(string.IsNullOrEmpty(grid0.Query.Filter)? \"true\" : grid0.Query.Filter)}"
                          },
                          {
                            "name": "$orderby",
                            "value": "${grid0.Query.OrderBy}"
                          },
                          {
                            "name": "$expand",
                            "value": ""
                          },
                          {
                            "name": "$select",
                            "value": "customersID,Company_Name,Company_Address,Company_Telephone_Number,Company_City,Registration_date,Contact_Person_Name,Contact_Person_Designation,Contact_Person_Tel_number,customer_img,DateAdded,Added_By,revenueAccount,expenseAccount"
                          }
                        ],
                        "type": "export"
                      }
                    ]
                  },
                  "icon": "get_app",
                  "items": [
                    {
                      "icon": "",
                      "text": "Excel",
                      "value": "xlsx"
                    },
                    {
                      "icon": "",
                      "text": "CSV",
                      "value": "csv"
                    }
                  ],
                  "name": "splitbutton0",
                  "style": {
                    "marginBottom": "10px",
                    "marginLeft": "10px"
                  },
                  "text": "Export",
                  "type": "splitbutton"
                },
                {
                  "attributes": [
                    {
                      "name": "@oninput",
                      "value": "@(async(args) => {search = $\"{args.Value}\";await grid0.GoToPage(0);await Load();})"
                    }
                  ],
                  "name": "textbox0",
                  "placeholder": "Search ...",
                  "style": {
                    "display": "block",
                    "marginBottom": "10px",
                    "width": "100%"
                  },
                  "type": "textbox",
                  "value": ""
                },
                {
                  "allowFiltering": true,
                  "allowPaging": true,
                  "allowSorting": true,
                  "columns": [
                    {
                      "property": "customersID",
                      "title": "Customers ID"
                    },
                    {
                      "property": "Company_Name",
                      "title": "Company Name"
                    },
                    {
                      "formatString": "{0:MM/dd/yyyy}",
                      "property": "Registration_date",
                      "title": "Registration Date"
                    },
                    {
                      "property": "Contact_Person_Name",
                      "title": "Contact Person Name"
                    },
                    {
                      "property": "Contact_Person_Tel_number",
                      "title": "Contact Person Tel Number"
                    },
                    {
                      "formatString": "{0:MM/dd/yyyy}",
                      "property": "DateAdded",
                      "title": "Date Added"
                    },
                    {
                      "property": "Added_By",
                      "title": "Added By"
                    },
                    {
                      "property": "revenueAccount",
                      "title": "Revenue Account"
                    },
                    {
                      "property": "expenseAccount",
                      "title": "Expense Account"
                    },
                    {
                      "filterable": false,
                      "sortable": false,
                      "template": [
                        {
                          "attributes": [
                            {
                              "name": "@onclick:stopPropagation",
                              "value": true
                            }
                          ],
                          "buttonStyle": "danger",
                          "events": {
                            "click": [
                              {
                                "condition": "await DialogService.Confirm(\"Are you sure you want to delete this record?\") == true",
                                "error": [
                                  {
                                    "detail": "Unable to delete Customer",
                                    "severity": "error",
                                    "summary": "Error",
                                    "type": "notify"
                                  }
                                ],
                                "name": "accounting_db.deleteCustomer",
                                "parameters": [
                                  {
                                    "name": "customersID",
                                    "value": "${data.customersID}"
                                  }
                                ],
                                "then": [
                                  {
                                    "code": "await grid0.Reload();",
                                    "condition": "result != null",
                                    "type": "execute"
                                  }
                                ],
                                "type": "invoke"
                              }
                            ]
                          },
                          "icon": "close",
                          "name": "gridDeleteButton",
                          "size": "sm",
                          "text": "",
                          "type": "button"
                        }
                      ],
                      "textAlign": "center",
                      "width": "70px"
                    }
                  ],
                  "data": "${getCustomersResult}",
                  "events": {
                    "loadData": [],
                    "rowDoubleClick": [
                      {
                        "parameters": [
                          {
                            "name": "customersID",
                            "value": "${event.Data.customersID}"
                          }
                        ],
                        "path": "edit-customer",
                        "then": [
                          {
                            "code": "await InvokeAsync(() => { StateHasChanged(); });",
                            "type": "execute"
                          }
                        ],
                        "type": "popup"
                      }
                    ]
                  },
                  "filterMode": "advanced",
                  "itemType": "Accounting.Models.AccountingDb.Customer",
                  "name": "grid0",
                  "title": "",
                  "type": "datagrid"
                }
              ],
              "type": "col"
            }
          ],
          "type": "row"
        }
      ],
      "container": "main",
      "type": "content"
    }
  ],
  "events": {
    "load": [
      {
        "condition": "string.IsNullOrEmpty(search)",
        "name": "search",
        "type": "set",
        "value": "\"\"",
        "valueType": "string"
      },
      {
        "name": "accounting_db.getCustomers",
        "parameters": [
          {
            "name": "$filter",
            "operator": "or",
            "value": [
              {
                "operation": "contains",
                "property": "Company_Name",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "Company_Address",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "Company_Telephone_Number",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "Company_City",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "Contact_Person_Name",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "Contact_Person_Designation",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "Contact_Person_Tel_number",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "customer_img",
                "type": "string",
                "value": "\"${search}\""
              },
              {
                "operation": "contains",
                "property": "Added_By",
                "type": "string",
                "value": "\"${search}\""
              }
            ]
          }
        ],
        "then": [
          {
            "name": "getCustomersResult",
            "type": "set",
            "value": "${result}",
            "valueType": "IEnumerable<Accounting.Models.AccountingDb.Customer>"
          }
        ],
        "type": "invoke"
      }
    ]
  },
  "layout": "Main",
  "name": "Customers"
}